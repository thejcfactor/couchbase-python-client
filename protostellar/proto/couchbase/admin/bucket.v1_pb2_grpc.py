# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protostellar.proto.couchbase.admin.bucket import v1_pb2 as couchbase_dot_admin_dot_bucket_dot_v1__pb2


class BucketAdminStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListBuckets = channel.unary_unary(
                '/couchbase.admin.bucket.v1.BucketAdmin/ListBuckets',
                request_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.ListBucketsRequest.SerializeToString,
                response_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.ListBucketsResponse.FromString,
                )
        self.CreateBucket = channel.unary_unary(
                '/couchbase.admin.bucket.v1.BucketAdmin/CreateBucket',
                request_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.CreateBucketRequest.SerializeToString,
                response_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.CreateBucketResponse.FromString,
                )
        self.UpdateBucket = channel.unary_unary(
                '/couchbase.admin.bucket.v1.BucketAdmin/UpdateBucket',
                request_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.UpdateBucketRequest.SerializeToString,
                response_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.UpdateBucketResponse.FromString,
                )
        self.DeleteBucket = channel.unary_unary(
                '/couchbase.admin.bucket.v1.BucketAdmin/DeleteBucket',
                request_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.DeleteBucketRequest.SerializeToString,
                response_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.DeleteBucketResponse.FromString,
                )


class BucketAdminServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListBuckets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBucket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBucket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBucket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BucketAdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListBuckets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBuckets,
                    request_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.ListBucketsRequest.FromString,
                    response_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.ListBucketsResponse.SerializeToString,
            ),
            'CreateBucket': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBucket,
                    request_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.CreateBucketRequest.FromString,
                    response_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.CreateBucketResponse.SerializeToString,
            ),
            'UpdateBucket': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBucket,
                    request_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.UpdateBucketRequest.FromString,
                    response_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.UpdateBucketResponse.SerializeToString,
            ),
            'DeleteBucket': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBucket,
                    request_deserializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.DeleteBucketRequest.FromString,
                    response_serializer=couchbase_dot_admin_dot_bucket_dot_v1__pb2.DeleteBucketResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'couchbase.admin.bucket.v1.BucketAdmin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BucketAdmin(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListBuckets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.admin.bucket.v1.BucketAdmin/ListBuckets',
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.ListBucketsRequest.SerializeToString,
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.ListBucketsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.admin.bucket.v1.BucketAdmin/CreateBucket',
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.CreateBucketRequest.SerializeToString,
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.CreateBucketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.admin.bucket.v1.BucketAdmin/UpdateBucket',
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.UpdateBucketRequest.SerializeToString,
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.UpdateBucketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.admin.bucket.v1.BucketAdmin/DeleteBucket',
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.DeleteBucketRequest.SerializeToString,
            couchbase_dot_admin_dot_bucket_dot_v1__pb2.DeleteBucketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
