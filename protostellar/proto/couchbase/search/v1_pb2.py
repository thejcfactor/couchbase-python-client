# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: couchbase/search.v1.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x63ouchbase/search.v1.proto\x12\x13\x63ouchbase.search.v1\x1a\x1egoogle/protobuf/duration.proto\"@\n\x11\x42ooleanFieldQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\r\n\x05value\x18\x06 \x01(\x08\"\xb5\x01\n\x0c\x42ooleanQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12(\n\x04must\x18\x02 \x01(\x0b\x32\x1a.couchbase.search.v1.Query\x12,\n\x08must_not\x18\x03 \x01(\x0b\x32\x1a.couchbase.search.v1.Query\x12*\n\x06should\x18\x04 \x01(\x0b\x32\x1a.couchbase.search.v1.Query\x12\x12\n\nshould_min\x18\x05 \x01(\r\"N\n\x10\x43onjunctionQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12+\n\x07queries\x18\x02 \x03(\x0b\x32\x1a.couchbase.search.v1.Query\"n\n\x0e\x44\x61teRangeQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x18\n\x10\x64\x61te_time_parser\x18\x03 \x01(\t\x12\x12\n\nstart_date\x18\x04 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x05 \x01(\t\"_\n\x10\x44isjunctionQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12+\n\x07queries\x18\x02 \x03(\x0b\x32\x1a.couchbase.search.v1.Query\x12\x0f\n\x07minimum\x18\x03 \x01(\r\"7\n\nDocIdQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x0b\n\x03ids\x18\x03 \x03(\t\"-\n\x06LatLng\x12\x10\n\x08latitude\x18\x01 \x01(\x01\x12\x11\n\tlongitude\x18\x02 \x01(\x01\"\x95\x01\n\x13GeoBoundingBoxQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12-\n\x08top_left\x18\x03 \x01(\x0b\x32\x1b.couchbase.search.v1.LatLng\x12\x31\n\x0c\x62ottom_right\x18\x04 \x01(\x0b\x32\x1b.couchbase.search.v1.LatLng\"o\n\x10GeoDistanceQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12+\n\x06\x63\x65nter\x18\x03 \x01(\x0b\x32\x1b.couchbase.search.v1.LatLng\x12\x10\n\x08\x64istance\x18\x04 \x01(\t\"^\n\x0fGeoPolygonQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12-\n\x08vertices\x18\x03 \x03(\x0b\x32\x1b.couchbase.search.v1.LatLng\"\x0f\n\rMatchAllQuery\"\x10\n\x0eMatchNoneQuery\"R\n\x10MatchPhraseQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x0e\n\x06phrase\x18\x03 \x01(\t\x12\x10\n\x08\x61nalyzer\x18\x04 \x01(\t\"\xce\x01\n\nMatchQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\t\x12\x10\n\x08\x61nalyzer\x18\x04 \x01(\t\x12\x11\n\tfuzziness\x18\x05 \x01(\x04\x12:\n\x08operator\x18\x06 \x01(\x0e\x32(.couchbase.search.v1.MatchQuery.Operator\x12\x15\n\rprefix_length\x18\x07 \x01(\x04\"\x1b\n\x08Operator\x12\x06\n\x02OR\x10\x00\x12\x07\n\x03\x41ND\x10\x01\"y\n\x11NumericRangeQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x0b\n\x03min\x18\x03 \x01(\x02\x12\x0b\n\x03max\x18\x04 \x01(\x02\x12\x15\n\rinclusive_min\x18\x05 \x01(\x08\x12\x15\n\rinclusive_max\x18\x06 \x01(\x08\":\n\x0bPhraseQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\r\n\x05terms\x18\x03 \x03(\t\";\n\x0bPrefixQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x0e\n\x06prefix\x18\x03 \x01(\t\"F\n\x10QueryStringQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x14\n\x0cquery_string\x18\x03 \x01(\t\";\n\x0bRegexpQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x0e\n\x06regexp\x18\x03 \x01(\t\"a\n\tTermQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x0c\n\x04term\x18\x03 \x01(\t\x12\x11\n\tfuzziness\x18\x04 \x01(\x04\x12\x15\n\rprefix_length\x18\x05 \x01(\x04\"\x97\x01\n\x0eTermRangeQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x0c\n\x04term\x18\x03 \x01(\t\x12\x11\n\tfuzziness\x18\x04 \x01(\x04\x12\x0b\n\x03min\x18\x05 \x01(\t\x12\x0b\n\x03max\x18\x06 \x01(\t\x12\x15\n\rinclusive_min\x18\x07 \x01(\x08\x12\x15\n\rinclusive_max\x18\x08 \x01(\x08\"?\n\rWildcardQuery\x12\r\n\x05\x62oost\x18\x01 \x01(\x02\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x10\n\x08wildcard\x18\x03 \x01(\t\"\xd5\n\n\x05Query\x12\x45\n\x13\x62oolean_field_query\x18\x01 \x01(\x0b\x32&.couchbase.search.v1.BooleanFieldQueryH\x00\x12:\n\rboolean_query\x18\x02 \x01(\x0b\x32!.couchbase.search.v1.BooleanQueryH\x00\x12\x42\n\x11\x63onjunction_query\x18\x03 \x01(\x0b\x32%.couchbase.search.v1.ConjunctionQueryH\x00\x12?\n\x10\x64\x61te_range_query\x18\x04 \x01(\x0b\x32#.couchbase.search.v1.DateRangeQueryH\x00\x12\x42\n\x11\x64isjunction_query\x18\x05 \x01(\x0b\x32%.couchbase.search.v1.DisjunctionQueryH\x00\x12\x37\n\x0c\x64oc_id_query\x18\x06 \x01(\x0b\x32\x1f.couchbase.search.v1.DocIdQueryH\x00\x12J\n\x16geo_bounding_box_query\x18\x07 \x01(\x0b\x32(.couchbase.search.v1.GeoBoundingBoxQueryH\x00\x12\x43\n\x12geo_distance_query\x18\x08 \x01(\x0b\x32%.couchbase.search.v1.GeoDistanceQueryH\x00\x12\x41\n\x11geo_polygon_query\x18\t \x01(\x0b\x32$.couchbase.search.v1.GeoPolygonQueryH\x00\x12=\n\x0fmatch_all_query\x18\n \x01(\x0b\x32\".couchbase.search.v1.MatchAllQueryH\x00\x12?\n\x10match_none_query\x18\x0b \x01(\x0b\x32#.couchbase.search.v1.MatchNoneQueryH\x00\x12\x43\n\x12match_phrase_query\x18\x0c \x01(\x0b\x32%.couchbase.search.v1.MatchPhraseQueryH\x00\x12\x36\n\x0bmatch_query\x18\r \x01(\x0b\x32\x1f.couchbase.search.v1.MatchQueryH\x00\x12\x45\n\x13numeric_range_query\x18\x0e \x01(\x0b\x32&.couchbase.search.v1.NumericRangeQueryH\x00\x12\x38\n\x0cphrase_query\x18\x0f \x01(\x0b\x32 .couchbase.search.v1.PhraseQueryH\x00\x12\x38\n\x0cprefix_query\x18\x10 \x01(\x0b\x32 .couchbase.search.v1.PrefixQueryH\x00\x12\x43\n\x12query_string_query\x18\x11 \x01(\x0b\x32%.couchbase.search.v1.QueryStringQueryH\x00\x12\x38\n\x0cregexp_query\x18\x12 \x01(\x0b\x32 .couchbase.search.v1.RegexpQueryH\x00\x12\x34\n\nterm_query\x18\x13 \x01(\x0b\x32\x1e.couchbase.search.v1.TermQueryH\x00\x12?\n\x10term_range_query\x18\x14 \x01(\x0b\x32#.couchbase.search.v1.TermRangeQueryH\x00\x12<\n\x0ewildcard_query\x18\x15 \x01(\x0b\x32\".couchbase.search.v1.WildcardQueryH\x00\x42\x07\n\x05query\"^\n\x0c\x46ieldSorting\x12\r\n\x05\x66ield\x18\x01 \x01(\t\x12\x12\n\ndescending\x18\x02 \x01(\x08\x12\x0f\n\x07missing\x18\x03 \x01(\t\x12\x0c\n\x04mode\x18\x04 \x01(\t\x12\x0c\n\x04type\x18\x05 \x01(\t\"r\n\x12GeoDistanceSorting\x12\r\n\x05\x66ield\x18\x01 \x01(\t\x12\x12\n\ndescending\x18\x02 \x01(\x08\x12+\n\x06\x63\x65nter\x18\x03 \x01(\x0b\x32\x1b.couchbase.search.v1.LatLng\x12\x0c\n\x04unit\x18\x04 \x01(\t\"\x1f\n\tIdSorting\x12\x12\n\ndescending\x18\x01 \x01(\x08\"\"\n\x0cScoreSorting\x12\x12\n\ndescending\x18\x01 \x01(\x08\"\x8b\x02\n\x07Sorting\x12:\n\rfield_sorting\x18\x01 \x01(\x0b\x32!.couchbase.search.v1.FieldSortingH\x00\x12G\n\x14geo_distance_sorting\x18\x02 \x01(\x0b\x32\'.couchbase.search.v1.GeoDistanceSortingH\x00\x12\x34\n\nid_sorting\x18\x03 \x01(\x0b\x32\x1e.couchbase.search.v1.IdSortingH\x00\x12:\n\rscore_sorting\x18\x04 \x01(\x0b\x32!.couchbase.search.v1.ScoreSortingH\x00\x42\t\n\x07sorting\"\xa7\x04\n\x12SearchQueryRequest\x12\x12\n\nindex_name\x18\x01 \x01(\t\x12)\n\x05query\x18\x02 \x01(\x0b\x32\x1a.couchbase.search.v1.Query\x12Q\n\x10scan_consistency\x18\x03 \x01(\x0e\x32\x37.couchbase.search.v1.SearchQueryRequest.ScanConsistency\x12\r\n\x05limit\x18\x04 \x01(\r\x12\x0c\n\x04skip\x18\x05 \x01(\r\x12\x1b\n\x13include_explanation\x18\x06 \x01(\x08\x12O\n\x0fhighlight_style\x18\x07 \x01(\x0e\x32\x36.couchbase.search.v1.SearchQueryRequest.HighlightStyle\x12\x18\n\x10highlight_fields\x18\x08 \x03(\t\x12\x0e\n\x06\x66ields\x18\t \x03(\t\x12*\n\x04sort\x18\n \x03(\x0b\x32\x1c.couchbase.search.v1.Sorting\x12\x17\n\x0f\x64isable_scoring\x18\x0b \x01(\x08\x12\x13\n\x0b\x63ollections\x18\x0c \x03(\t\x12\x19\n\x11include_locations\x18\r \x01(\x08\"\"\n\x0fScanConsistency\x12\x0f\n\x0bNOT_BOUNDED\x10\x00\"1\n\x0eHighlightStyle\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x08\n\x04HTML\x10\x01\x12\x08\n\x04\x41NSI\x10\x02\"\xc2\x02\n\x13SearchQueryResponse\x12\x0c\n\x04hits\x18\x01 \x03(\x0c\x12I\n\tmeta_data\x18\x02 \x01(\x0b\x32\x31.couchbase.search.v1.SearchQueryResponse.MetaDataH\x00\x88\x01\x01\x1a\xc3\x01\n\x08MetaData\x12\x31\n\x0e\x65xecution_time\x18\x01 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x12\n\ntotal_rows\x18\x02 \x01(\x04\x12\x11\n\tmax_score\x18\x03 \x01(\x01\x12\x1d\n\x15total_partition_count\x18\x04 \x01(\x04\x12\x1f\n\x17success_partition_count\x18\x05 \x01(\x04\x12\x1d\n\x15\x65rror_partition_count\x18\x06 \x01(\x04\x42\x0c\n\n_meta_data2n\n\x06Search\x12\x64\n\x0bSearchQuery\x12\'.couchbase.search.v1.SearchQueryRequest\x1a(.couchbase.search.v1.SearchQueryResponse\"\x00\x30\x01\x42tZ@github.com/couchbase/stellar-nebula/genproto/search_v1;search_v1\xea\x02/Couchbase::StellarNebula::Generated::Search::V1b\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'couchbase.search.v1_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z@github.com/couchbase/stellar-nebula/genproto/search_v1;search_v1\352\002/Couchbase::StellarNebula::Generated::Search::V1'
  _BOOLEANFIELDQUERY._serialized_start=82
  _BOOLEANFIELDQUERY._serialized_end=146
  _BOOLEANQUERY._serialized_start=149
  _BOOLEANQUERY._serialized_end=330
  _CONJUNCTIONQUERY._serialized_start=332
  _CONJUNCTIONQUERY._serialized_end=410
  _DATERANGEQUERY._serialized_start=412
  _DATERANGEQUERY._serialized_end=522
  _DISJUNCTIONQUERY._serialized_start=524
  _DISJUNCTIONQUERY._serialized_end=619
  _DOCIDQUERY._serialized_start=621
  _DOCIDQUERY._serialized_end=676
  _LATLNG._serialized_start=678
  _LATLNG._serialized_end=723
  _GEOBOUNDINGBOXQUERY._serialized_start=726
  _GEOBOUNDINGBOXQUERY._serialized_end=875
  _GEODISTANCEQUERY._serialized_start=877
  _GEODISTANCEQUERY._serialized_end=988
  _GEOPOLYGONQUERY._serialized_start=990
  _GEOPOLYGONQUERY._serialized_end=1084
  _MATCHALLQUERY._serialized_start=1086
  _MATCHALLQUERY._serialized_end=1101
  _MATCHNONEQUERY._serialized_start=1103
  _MATCHNONEQUERY._serialized_end=1119
  _MATCHPHRASEQUERY._serialized_start=1121
  _MATCHPHRASEQUERY._serialized_end=1203
  _MATCHQUERY._serialized_start=1206
  _MATCHQUERY._serialized_end=1412
  _MATCHQUERY_OPERATOR._serialized_start=1385
  _MATCHQUERY_OPERATOR._serialized_end=1412
  _NUMERICRANGEQUERY._serialized_start=1414
  _NUMERICRANGEQUERY._serialized_end=1535
  _PHRASEQUERY._serialized_start=1537
  _PHRASEQUERY._serialized_end=1595
  _PREFIXQUERY._serialized_start=1597
  _PREFIXQUERY._serialized_end=1656
  _QUERYSTRINGQUERY._serialized_start=1658
  _QUERYSTRINGQUERY._serialized_end=1728
  _REGEXPQUERY._serialized_start=1730
  _REGEXPQUERY._serialized_end=1789
  _TERMQUERY._serialized_start=1791
  _TERMQUERY._serialized_end=1888
  _TERMRANGEQUERY._serialized_start=1891
  _TERMRANGEQUERY._serialized_end=2042
  _WILDCARDQUERY._serialized_start=2044
  _WILDCARDQUERY._serialized_end=2107
  _QUERY._serialized_start=2110
  _QUERY._serialized_end=3475
  _FIELDSORTING._serialized_start=3477
  _FIELDSORTING._serialized_end=3571
  _GEODISTANCESORTING._serialized_start=3573
  _GEODISTANCESORTING._serialized_end=3687
  _IDSORTING._serialized_start=3689
  _IDSORTING._serialized_end=3720
  _SCORESORTING._serialized_start=3722
  _SCORESORTING._serialized_end=3756
  _SORTING._serialized_start=3759
  _SORTING._serialized_end=4026
  _SEARCHQUERYREQUEST._serialized_start=4029
  _SEARCHQUERYREQUEST._serialized_end=4580
  _SEARCHQUERYREQUEST_SCANCONSISTENCY._serialized_start=4495
  _SEARCHQUERYREQUEST_SCANCONSISTENCY._serialized_end=4529
  _SEARCHQUERYREQUEST_HIGHLIGHTSTYLE._serialized_start=4531
  _SEARCHQUERYREQUEST_HIGHLIGHTSTYLE._serialized_end=4580
  _SEARCHQUERYRESPONSE._serialized_start=4583
  _SEARCHQUERYRESPONSE._serialized_end=4905
  _SEARCHQUERYRESPONSE_METADATA._serialized_start=4696
  _SEARCHQUERYRESPONSE_METADATA._serialized_end=4891
  _SEARCH._serialized_start=4907
  _SEARCH._serialized_end=5017
# @@protoc_insertion_point(module_scope)
