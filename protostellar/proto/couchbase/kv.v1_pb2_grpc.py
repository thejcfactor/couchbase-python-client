# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protostellar.proto.couchbase.kv import v1_pb2 as couchbase_dot_kv_dot_v1__pb2


class KvStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Get',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.GetRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
                )
        self.GetAndTouch = channel.unary_unary(
                '/couchbase.kv.v1.Kv/GetAndTouch',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.GetAndTouchRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
                )
        self.GetAndLock = channel.unary_unary(
                '/couchbase.kv.v1.Kv/GetAndLock',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.GetAndLockRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
                )
        self.Unlock = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Unlock',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.UnlockRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.UnlockResponse.FromString,
                )
        self.GetReplica = channel.unary_unary(
                '/couchbase.kv.v1.Kv/GetReplica',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.GetReplicaRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
                )
        self.Touch = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Touch',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.TouchRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.TouchResponse.FromString,
                )
        self.Exists = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Exists',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.ExistsRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.ExistsResponse.FromString,
                )
        self.Insert = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Insert',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.InsertRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.InsertResponse.FromString,
                )
        self.Upsert = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Upsert',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.UpsertRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.UpsertResponse.FromString,
                )
        self.Replace = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Replace',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.ReplaceRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.ReplaceResponse.FromString,
                )
        self.Remove = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Remove',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.RemoveRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.RemoveResponse.FromString,
                )
        self.Increment = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Increment',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.IncrementRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.IncrementResponse.FromString,
                )
        self.Decrement = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Decrement',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.DecrementRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.DecrementResponse.FromString,
                )
        self.Append = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Append',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.AppendRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.AppendResponse.FromString,
                )
        self.Prepend = channel.unary_unary(
                '/couchbase.kv.v1.Kv/Prepend',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.PrependRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.PrependResponse.FromString,
                )
        self.LookupIn = channel.unary_unary(
                '/couchbase.kv.v1.Kv/LookupIn',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.LookupInRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.LookupInResponse.FromString,
                )
        self.MutateIn = channel.unary_unary(
                '/couchbase.kv.v1.Kv/MutateIn',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.MutateInRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.MutateInResponse.FromString,
                )
        self.RangeScan = channel.unary_unary(
                '/couchbase.kv.v1.Kv/RangeScan',
                request_serializer=couchbase_dot_kv_dot_v1__pb2.RangeScanRequest.SerializeToString,
                response_deserializer=couchbase_dot_kv_dot_v1__pb2.RangeScanResponse.FromString,
                )


class KvServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAndTouch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAndLock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Touch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Insert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Upsert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Replace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Increment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decrement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Append(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Prepend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MutateIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RangeScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KvServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.GetRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.SerializeToString,
            ),
            'GetAndTouch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAndTouch,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.GetAndTouchRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.SerializeToString,
            ),
            'GetAndLock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAndLock,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.GetAndLockRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.SerializeToString,
            ),
            'Unlock': grpc.unary_unary_rpc_method_handler(
                    servicer.Unlock,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.UnlockRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.UnlockResponse.SerializeToString,
            ),
            'GetReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReplica,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.GetReplicaRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.GetResponse.SerializeToString,
            ),
            'Touch': grpc.unary_unary_rpc_method_handler(
                    servicer.Touch,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.TouchRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.TouchResponse.SerializeToString,
            ),
            'Exists': grpc.unary_unary_rpc_method_handler(
                    servicer.Exists,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.ExistsRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.ExistsResponse.SerializeToString,
            ),
            'Insert': grpc.unary_unary_rpc_method_handler(
                    servicer.Insert,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.InsertRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.InsertResponse.SerializeToString,
            ),
            'Upsert': grpc.unary_unary_rpc_method_handler(
                    servicer.Upsert,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.UpsertRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.UpsertResponse.SerializeToString,
            ),
            'Replace': grpc.unary_unary_rpc_method_handler(
                    servicer.Replace,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.ReplaceRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.ReplaceResponse.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.RemoveRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.RemoveResponse.SerializeToString,
            ),
            'Increment': grpc.unary_unary_rpc_method_handler(
                    servicer.Increment,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.IncrementRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.IncrementResponse.SerializeToString,
            ),
            'Decrement': grpc.unary_unary_rpc_method_handler(
                    servicer.Decrement,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.DecrementRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.DecrementResponse.SerializeToString,
            ),
            'Append': grpc.unary_unary_rpc_method_handler(
                    servicer.Append,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.AppendRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.AppendResponse.SerializeToString,
            ),
            'Prepend': grpc.unary_unary_rpc_method_handler(
                    servicer.Prepend,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.PrependRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.PrependResponse.SerializeToString,
            ),
            'LookupIn': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupIn,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.LookupInRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.LookupInResponse.SerializeToString,
            ),
            'MutateIn': grpc.unary_unary_rpc_method_handler(
                    servicer.MutateIn,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.MutateInRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.MutateInResponse.SerializeToString,
            ),
            'RangeScan': grpc.unary_unary_rpc_method_handler(
                    servicer.RangeScan,
                    request_deserializer=couchbase_dot_kv_dot_v1__pb2.RangeScanRequest.FromString,
                    response_serializer=couchbase_dot_kv_dot_v1__pb2.RangeScanResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'couchbase.kv.v1.Kv', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Kv(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Get',
            couchbase_dot_kv_dot_v1__pb2.GetRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAndTouch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/GetAndTouch',
            couchbase_dot_kv_dot_v1__pb2.GetAndTouchRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAndLock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/GetAndLock',
            couchbase_dot_kv_dot_v1__pb2.GetAndLockRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Unlock',
            couchbase_dot_kv_dot_v1__pb2.UnlockRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.UnlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/GetReplica',
            couchbase_dot_kv_dot_v1__pb2.GetReplicaRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Touch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Touch',
            couchbase_dot_kv_dot_v1__pb2.TouchRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.TouchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Exists',
            couchbase_dot_kv_dot_v1__pb2.ExistsRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.ExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Insert',
            couchbase_dot_kv_dot_v1__pb2.InsertRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.InsertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Upsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Upsert',
            couchbase_dot_kv_dot_v1__pb2.UpsertRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.UpsertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Replace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Replace',
            couchbase_dot_kv_dot_v1__pb2.ReplaceRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.ReplaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Remove',
            couchbase_dot_kv_dot_v1__pb2.RemoveRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.RemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Increment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Increment',
            couchbase_dot_kv_dot_v1__pb2.IncrementRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.IncrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Decrement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Decrement',
            couchbase_dot_kv_dot_v1__pb2.DecrementRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.DecrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Append(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Append',
            couchbase_dot_kv_dot_v1__pb2.AppendRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.AppendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Prepend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/Prepend',
            couchbase_dot_kv_dot_v1__pb2.PrependRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.PrependResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/LookupIn',
            couchbase_dot_kv_dot_v1__pb2.LookupInRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.LookupInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MutateIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/MutateIn',
            couchbase_dot_kv_dot_v1__pb2.MutateInRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.MutateInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RangeScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.kv.v1.Kv/RangeScan',
            couchbase_dot_kv_dot_v1__pb2.RangeScanRequest.SerializeToString,
            couchbase_dot_kv_dot_v1__pb2.RangeScanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
