# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protostellar.proto.couchbase.transactions import v1_pb2 as couchbase_dot_transactions_dot_v1__pb2


class TransactionsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TransactionBeginAttempt = channel.unary_unary(
                '/couchbase.transactions.v1.Transactions/TransactionBeginAttempt',
                request_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionBeginAttemptRequest.SerializeToString,
                response_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionBeginAttemptResponse.FromString,
                )
        self.TransactionCommit = channel.unary_unary(
                '/couchbase.transactions.v1.Transactions/TransactionCommit',
                request_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionCommitRequest.SerializeToString,
                response_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionCommitResponse.FromString,
                )
        self.TransactionRollback = channel.unary_unary(
                '/couchbase.transactions.v1.Transactions/TransactionRollback',
                request_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRollbackRequest.SerializeToString,
                response_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRollbackResponse.FromString,
                )
        self.TransactionGet = channel.unary_unary(
                '/couchbase.transactions.v1.Transactions/TransactionGet',
                request_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionGetRequest.SerializeToString,
                response_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionGetResponse.FromString,
                )
        self.TransactionInsert = channel.unary_unary(
                '/couchbase.transactions.v1.Transactions/TransactionInsert',
                request_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionInsertRequest.SerializeToString,
                response_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionInsertResponse.FromString,
                )
        self.TransactionReplace = channel.unary_unary(
                '/couchbase.transactions.v1.Transactions/TransactionReplace',
                request_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionReplaceRequest.SerializeToString,
                response_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionReplaceResponse.FromString,
                )
        self.TransactionRemove = channel.unary_unary(
                '/couchbase.transactions.v1.Transactions/TransactionRemove',
                request_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRemoveRequest.SerializeToString,
                response_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRemoveResponse.FromString,
                )


class TransactionsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TransactionBeginAttempt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionCommit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionRollback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionInsert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionReplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransactionRemove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TransactionBeginAttempt': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionBeginAttempt,
                    request_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionBeginAttemptRequest.FromString,
                    response_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionBeginAttemptResponse.SerializeToString,
            ),
            'TransactionCommit': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionCommit,
                    request_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionCommitRequest.FromString,
                    response_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionCommitResponse.SerializeToString,
            ),
            'TransactionRollback': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionRollback,
                    request_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRollbackRequest.FromString,
                    response_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRollbackResponse.SerializeToString,
            ),
            'TransactionGet': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionGet,
                    request_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionGetRequest.FromString,
                    response_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionGetResponse.SerializeToString,
            ),
            'TransactionInsert': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionInsert,
                    request_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionInsertRequest.FromString,
                    response_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionInsertResponse.SerializeToString,
            ),
            'TransactionReplace': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionReplace,
                    request_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionReplaceRequest.FromString,
                    response_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionReplaceResponse.SerializeToString,
            ),
            'TransactionRemove': grpc.unary_unary_rpc_method_handler(
                    servicer.TransactionRemove,
                    request_deserializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRemoveRequest.FromString,
                    response_serializer=couchbase_dot_transactions_dot_v1__pb2.TransactionRemoveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'couchbase.transactions.v1.Transactions', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Transactions(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TransactionBeginAttempt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.transactions.v1.Transactions/TransactionBeginAttempt',
            couchbase_dot_transactions_dot_v1__pb2.TransactionBeginAttemptRequest.SerializeToString,
            couchbase_dot_transactions_dot_v1__pb2.TransactionBeginAttemptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionCommit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.transactions.v1.Transactions/TransactionCommit',
            couchbase_dot_transactions_dot_v1__pb2.TransactionCommitRequest.SerializeToString,
            couchbase_dot_transactions_dot_v1__pb2.TransactionCommitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionRollback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.transactions.v1.Transactions/TransactionRollback',
            couchbase_dot_transactions_dot_v1__pb2.TransactionRollbackRequest.SerializeToString,
            couchbase_dot_transactions_dot_v1__pb2.TransactionRollbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.transactions.v1.Transactions/TransactionGet',
            couchbase_dot_transactions_dot_v1__pb2.TransactionGetRequest.SerializeToString,
            couchbase_dot_transactions_dot_v1__pb2.TransactionGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionInsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.transactions.v1.Transactions/TransactionInsert',
            couchbase_dot_transactions_dot_v1__pb2.TransactionInsertRequest.SerializeToString,
            couchbase_dot_transactions_dot_v1__pb2.TransactionInsertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionReplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.transactions.v1.Transactions/TransactionReplace',
            couchbase_dot_transactions_dot_v1__pb2.TransactionReplaceRequest.SerializeToString,
            couchbase_dot_transactions_dot_v1__pb2.TransactionReplaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransactionRemove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/couchbase.transactions.v1.Transactions/TransactionRemove',
            couchbase_dot_transactions_dot_v1__pb2.TransactionRemoveRequest.SerializeToString,
            couchbase_dot_transactions_dot_v1__pb2.TransactionRemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
